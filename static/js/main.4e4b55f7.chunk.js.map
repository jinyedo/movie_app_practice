{"version":3,"sources":["routes/About.js","component/Movie.js","routes/Home.js","component/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","className","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Navigation","Detail","props","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"oRAceA,MAXf,WACI,OACI,sBAAKC,UAAU,kBAAf,UACI,+FAGA,uF,gFCuCGC,MAxCf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/C,OACQ,qBAAKP,UAAU,QAAf,SACI,eAAC,IAAD,CAAMQ,GAAI,CACNC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACHP,OACAC,QACAC,UACAC,SACAC,WAPR,UAUI,qBAAKI,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,sBAAKJ,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BI,IAC7B,oBAAIJ,UAAU,aAAd,SAA4BG,IAC5B,oBAAIH,UAAU,eAAd,SACKO,EAAOM,KAAI,SAACC,EAAOC,GAChB,OACI,6BAAiBD,GAARC,QAIrB,oBAAGf,UAAU,gBAAb,UAA8BK,EAAQW,MAAM,EAAG,KAA/C,kBCsCTC,G,kNA/DXP,MAAQ,CACJQ,WAAW,EACXC,OAAQ,I,EAGZC,U,sBAAY,8BAAAC,EAAA,sEAUGC,IAAMC,IAAI,0DAVb,gBAQAJ,EARA,EAMDK,KACHA,KACIL,OAIR,EAAKM,SAAS,CAAEN,SAASD,WAAW,IAZ5B,2C,kEAoBRQ,KAAKN,c,+BAIC,IAAD,EACyBM,KAAKhB,MAA3BQ,EADH,EACGA,UAAWC,EADd,EACcA,OACnB,OACI,qBAAKnB,UAAU,YAAf,SACKkB,EAEG,qBAAKlB,UAAU,SAAf,SACI,sBAAMA,UAAU,cAAhB,0BAIF,qBAAKA,UAAU,SAAf,SACGmB,EAAON,KAAI,SAAAc,GACR,OACI,cAAC,EAAD,CAGIzB,GAAIyB,EAAMzB,GACVC,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMC,mBACdrB,OAAQoB,EAAMpB,QAPToB,EAAMzB,e,GA9C5B2B,IAAMC,Y,MCcVC,MAff,WACI,OACI,sBAAK/B,UAAU,MAAf,UACI,cAAC,IAAD,CAAMQ,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCcGwB,E,kLAlBS,MAEcN,KAAKO,MAA3BC,EAFQ,EAERA,SAAUC,EAFF,EAEEA,aACKC,IAAnBF,EAASxB,OACTyB,EAAQE,KAAK,O,+BAIX,IACEH,EAAaR,KAAKO,MAAlBC,SACR,OAAIA,EAASxB,MACF,6BAAKwB,EAASxB,MAAMN,QAEpB,S,GAfEyB,IAAMC,WCmBZQ,MAdf,WACI,OAII,cAHA,CAGC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWxB,IACxC,cAAC,IAAD,CAAOsB,KAAK,SAASE,UAAW1C,IAChC,cAAC,IAAD,CAAOwC,KAAK,aAAaE,UAAWT,QCZhDU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4e4b55f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./About.css\";\r\n\r\nfunction About() {\r\n    return(\r\n        <div className=\"about_container\">\r\n            <span>\r\n                React Movie App 다시 만들어보기\r\n            </span>\r\n            <span>201740233 진예도 movie_app_practice</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Movie.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n// state가 필요하지 않은 경우 class형 컴포넌트는 필요없다.\r\n// 대신 function형 컴포넌트를 사용하면 된다.\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n    return(\r\n            <div className=\"movie\">\r\n                <Link to={{\r\n                    pathname: `/movie/${id}`,\r\n                    state: {\r\n                        year,\r\n                        title,\r\n                        summary,\r\n                        poster,\r\n                        genres\r\n                    }\r\n                }}>\r\n                    <img src={poster} alt={title} title={title} />\r\n                    <div className=\"movie_data\">\r\n                        <h3 className=\"movie_title\">{title}</h3>\r\n                        <h5 className=\"movie_year\">{year}</h5>\r\n                        <ul className=\"movie_genres\">\r\n                            {genres.map((genre, index) => { // map을 사용할때 각각의 아이템에는 반드시 고유 key값이 있어야한다.\r\n                                return (\r\n                                    <li key={index}>{genre}</li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                        <p className=\"movie_summary\">{summary.slice(0, 140)}...</p>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,      // 아이디\r\n    year: PropTypes.number.isRequired,    // 연도 \r\n    title: PropTypes.string.isRequired,   // 제목\r\n    summary: PropTypes.string.isRequired, // 요약\r\n    poster: PropTypes.string.isRequired,  // 사진\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired // 장르\r\n}\r\n\r\nexport default Movie;","import React from 'react'; // React\r\nimport axios from 'axios'; // data fetch\r\nimport Movie from '../component/Movie'; // Movie component\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n\r\n    state = {\r\n        isLoading: true, // 로딩\r\n        movies: [] // 영화 정보를 담을 배열\r\n    }\r\n\r\n    getMovies = async () => {\r\n        // 좋은 코드가 아님\r\n        // const movies = await axios.get(\"https://yts.mx/api/v2/list_movies.json\")\r\n        // console.log(movies.data.data.movies); \r\n\r\n        // ↑와 동일한 \r\n        const {data: {\r\n            data: {\r\n                movies\r\n            }\r\n        }} = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=ratting\"); // sort_by=ratting - ratting순으로정렬\r\n        //console.log(movies)\r\n        this.setState({ movies , isLoading: false}); // state의 movies[] 안에 movies의 데이터 넣기\r\n\r\n    }\r\n\r\n    // reder()이 실행된 다음 호출\r\n    componentDidMount() {\r\n        // axios.get()을 사용하여 data fatch를 해야하지만 데이터를 불러오는데 시간이 걸리므로\r\n        // getMovies() 함수를 만들어 async 와 await 키워드를 사용하여 JavaScript에게 기다리라고 알려줌\r\n        this.getMovies(); \r\n    }\r\n\r\n    // render()을 사용하여 JSX를 반환\r\n    render() {\r\n        const { isLoading, movies } = this.state; // this.state를 타이핑 하고 싶지 않을때 변수로 만들어 버리기\r\n        return (\r\n            <div className=\"container\">\r\n                {isLoading ? \r\n                    // 로딩중이라면\r\n                    <div className=\"loader\">\r\n                        <span className=\"loader_text\">Loading...</span>\r\n                    </div>\r\n\r\n                    // 로딩이 끝났다면 Movie.js의 컴포넌트를 가져와 화면에 뿌리기\r\n                    : <div className=\"movies\"> \r\n                        {movies.map(movie => {\r\n                            return (\r\n                                <Movie \r\n                                    key={movie.id}\r\n                                // { 이것만 하면 오류가남 -> 고유 key값이 없기 때문에 -> 그래서 윗줄에 고유 key를 만들어 줄거다 ↑\r\n                                    id={movie.id}\r\n                                    year={movie.year}\r\n                                    title={movie.title}\r\n                                    summary={movie.summary}\r\n                                    poster={movie.medium_cover_image}\r\n                                    genres={movie.genres}\r\n                                // }\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div> \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nfunction Navigation() {\r\n    return(\r\n        <div className=\"nav\">\r\n            <Link to='/'>Home</Link>\r\n            <Link to='/about'>About</Link>\r\n            {/* <Link to={{\r\n                pathname: \"/about\",\r\n                state: {\r\n                    fromNavigation: true\r\n                }\r\n            }}>About</Link> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nclass Detail extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        // location은 state를 사용할 수 있고, | history는 url 관련 설정을 할 수 있다.\r\n        const { location, history } = this.props;\r\n        if (location.state === undefined) { \r\n            history.push(\"/\"); // Home으로 되돌아가기\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { location } = this.props;\r\n        if (location.state) {\r\n            return <h1>{location.state.title}</h1>\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport About from \"./routes/About\";\r\nimport Home from \"./routes/Home\";\r\nimport Navigation from './component/Navigation';\r\nimport Detail from './routes/Detail';\r\n\r\nfunction App() {\r\n    return(\r\n        // Route에는 2가지 props가 필요\r\n        // 1. 렌더링할 스크린 = path\r\n        // 2. 어떤것을 할지 = component\r\n        <HashRouter>\r\n            <Navigation />\r\n            <Route path=\"/\" exact={true} component={Home} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/movie/:id\" component={Detail} />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}