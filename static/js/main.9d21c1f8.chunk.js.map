{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qSAoCeA,MA7Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,eAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAChB,OACI,6BAAiBD,GAARC,QAIrB,oBAAGL,UAAU,gBAAb,UAA8BH,EAAQS,MAAM,EAAG,KAA/C,gBCiDDC,G,kNA/DXC,MAAQ,CACJC,WAAW,EACXC,OAAQ,I,EAGZC,U,sBAAY,8BAAAC,EAAA,sEAUGC,IAAMC,IAAI,0DAVb,gBAQAJ,EARA,EAMDK,KACHA,KACIL,OAIR,EAAKM,SAAS,CAAEN,SAASD,WAAW,IAZ5B,2C,kEAoBRQ,KAAKN,c,+BAIC,IAAD,EACyBM,KAAKT,MAA3BC,EADH,EACGA,UAAWC,EADd,EACcA,OACnB,OACI,qBAAKV,UAAU,YAAf,SACKS,EAEG,qBAAKT,UAAU,SAAf,SACI,sBAAMA,UAAU,cAAhB,0BAIF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GACR,OACI,cAAC,EAAD,CAGIC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QAPTmB,EAAMC,e,GA9C7BE,IAAMC,YCDxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9d21c1f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Movie.css\";\r\n\r\n// state가 필요하지 않은 경우 class형 컴포넌트는 필요없다.\r\n// 대신 function형 컴포넌트를 사용하면 된다.\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n    return(\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie_data\">\r\n                <h3 className=\"movie_title\">{title}</h3>\r\n                <h5 className=\"movie_year\">{year}</h5>\r\n                <ul className=\"movie_genres\">\r\n                    {genres.map((genre, index) => { // map을 사용할때 각각의 아이템에는 반드시 고유 key값이 있어야한다.\r\n                        return (\r\n                            <li key={index}>{genre}</li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n                <p className=\"movie_summary\">{summary.slice(0, 140)}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,      // 아이디\r\n    year: PropTypes.number.isRequired,    // 연도 \r\n    title: PropTypes.string.isRequired,   // 제목\r\n    summary: PropTypes.string.isRequired, // 요약\r\n    poster: PropTypes.string.isRequired,  // 사진\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired // 장르\r\n}\r\n\r\nexport default Movie;","import React from 'react'; // React\r\nimport axios from 'axios'; // data fetch\r\nimport Movie from './Movie'; // Movie component\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        isLoading: true, // 로딩\r\n        movies: [] // 영화 정보를 담을 배열\r\n    }\r\n\r\n    getMovies = async () => {\r\n        // 좋은 코드가 아님\r\n        // const movies = await axios.get(\"https://yts.mx/api/v2/list_movies.json\")\r\n        // console.log(movies.data.data.movies); \r\n\r\n        // ↑와 동일한 \r\n        const {data: {\r\n            data: {\r\n                movies\r\n            }\r\n        }} = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=ratting\"); // sort_by=ratting - ratting순으로정렬\r\n        //console.log(movies)\r\n        this.setState({ movies , isLoading: false}); // state의 movies[] 안에 movies의 데이터 넣기\r\n\r\n    }\r\n\r\n    // reder()이 실행된 다음 호출\r\n    componentDidMount() {\r\n        // axios.get()을 사용하여 data fatch를 해야하지만 데이터를 불러오는데 시간이 걸리므로\r\n        // getMovies() 함수를 만들어 async 와 await 키워드를 사용하여 JavaScript에게 기다리라고 알려줌\r\n        this.getMovies(); \r\n    }\r\n\r\n    // render()을 사용하여 JSX를 반환\r\n    render() {\r\n        const { isLoading, movies } = this.state; // this.state를 타이핑 하고 싶지 않을때 변수로 만들어 버리기\r\n        return (\r\n            <div className=\"container\">\r\n                {isLoading ? \r\n                    // 로딩중이라면\r\n                    <div className=\"loader\">\r\n                        <span className=\"loader_text\">Loading...</span>\r\n                    </div>\r\n\r\n                    // 로딩이 끝났다면 Movie.js의 컴포넌트를 가져와 화면에 뿌리기\r\n                    : <div className=\"movies\"> \r\n                        {movies.map(movie => {\r\n                            return (\r\n                                <Movie \r\n                                    key={movie.id}\r\n                                // { 이것만 하면 오류가남 -> 고유 key값이 없기 때문에 -> 그래서 윗줄에 고유 key를 만들어 줄거다 ↑\r\n                                    id={movie.id}\r\n                                    year={movie.year}\r\n                                    title={movie.title}\r\n                                    summary={movie.summary}\r\n                                    poster={movie.medium_cover_image}\r\n                                    genres={movie.genres}\r\n                                // }\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div> \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}